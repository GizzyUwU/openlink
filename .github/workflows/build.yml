name: "publish"

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - ".gitea/**"
      - ".github/workflows/deploy.yml"

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "ubuntu-22.04"
            args: ""
          - platform: "ubuntu-22.04-arm"
            args: ""
          - platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.platform }}
    env:
      PKG_CONFIG_PATH: ${{ matrix.platform == 'windows-latest' && 'C:\\msys64\\usr\\lib\\pkgconfig;C:\\msys64\\usr\\share\\pkgconfig' || '' }}
    steps:
      - uses: actions/checkout@v4

      - name: Disable initramfs update
        if: startsWith(matrix.platform, 'ubuntu-22.04')
        run: sudo sed -i 's/yes/no/g' /etc/initramfs-tools/update-initramfs.conf

      - name: Disable man-db update
        if: startsWith(matrix.platform, 'ubuntu-22.04')
        run: sudo rm -f /var/lib/man-db/auto-update

      - uses: awalsh128/cache-apt-pkgs-action@latest
        if: startsWith(matrix.platform, 'ubuntu-22.04')
        with:
          packages: libwebkit2gtk-4.1 libayatana-appindicator3-1 librsvg2-dev patchelf libgtk-3-dev pkg-config libglib2.0-dev libpango1.0-dev libcairo2-dev libgdk-pixbuf2.0-dev libatk1.0-dev libharfbuzz-dev pkg-config xdg-utils

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: Configure sccache
        run: |
          echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
          echo "SCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.9

      - name: install frontend dependencies
        run: yarn install

      - name: Add SHORT_SHA env property with commit short sha
        shell: bash
        run: echo "SHORT_SHA=${GITHUB_SHA::8}" >> $GITHUB_ENV

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          tagName: app-v__VERSION__
          releaseName: "App v__VERSION__"
          releaseBody: ${{ github.event.head_commit.message }}
          includeUpdaterJson: true
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}
